{"version":3,"sources":["reactor/config.js","shared/config.js","reactor/middleware.js","reactor/router.js","reactor/metadata.js","reactor/globals.js","reactor/localization.js","shared/components/table/table-actions.js","shared/components/table/table-toolbar.js","shared/components/table/table.js","reactor/cache.js","reactor/user.js","reactor/endpoint.js","modules/users/services/users-service.js","reactor/restful-endpoint.js","reactor/component/reactor.component.js","shared/components/layout/theme.js","shared/components/layout/layout.js","shared/components/layout-settings.js","shared/components/header/header.js","shared/components/sidebar/sidebar-items-list.js","shared/components/sidebar/list-item.js","shared/components/sidebar/list-item-group.js","shared/components/sidebar/sidebar.js","shared/components/layout/dashboard-layout.js","modules/users/components/Users.js","reactor/component/form/form.js","modules/users/services/auth.js","reactor/component/form/form-input.js","modules/users/components/Login.js","reactor/helpers.js","modules/users/routes.js","modules/users/middleware/guardian.js","modules/users/middleware/reverse-guardian.js","shared/locales/en.js","modules/users/locales/en.js","modules/users/locales/ar.js","reactor/serviceWorker.js","index.js","reactor/reactor.js"],"names":["configurationsList","config","set","key","value","arguments","length","data","Object","assign","get","defaultValue","Obj","endpoint","baseUrl","apiKey","locales","en","ar","Middleware","props","route","history","params","match","middlewareList","middleware","Is","array","output","component","createBrowserHistory","localeCodes","location","pathname","replace","split","firstSegmentOfLocation","document","documentElement","dir","lang","routesList","Routes","routes","map","index","path","keys","join","exact","routeData","navigateTo","push","add","title","direction","left","right","Globals","marginLeft","marginRight","paddingLeft","paddingRight","localeCode","localizationObject","keywords","this","merge","keyword","args","translateFrom","translation","vsprintf","trans","translate","useStyles","makeStyles","addButton","fill","lightBlue","tooltip","backgroundColor","TableAddButton","classes","Tooltip","placement","IconButton","fontSize","color","TableEditButton","TableDeleteButton","theme","root","flexGrow","appBar","grey","TableToolBar","text","className","AppBar","position","Toolbar","edge","Typography","variant","SimpleTable","options","records","tableHeading","columns","column","TableCell","heading","tableRows","record","recordIndex","TableRow","id","buttons","ActionButton","Fragment","TableContainer","Paper","Table","TableHead","TableBody","storage","localStorage","setItem","JSON","stringify","getItem","parse","remove","removeItem","userData","cache","accessToken","http","axios","create","baseURL","transformRequest","formElement","FormData","interceptors","request","use","requestConfig","auth","user","isLoggedIn","getAccessToken","headers","Authorization","post","put","delete","ReactorComponent","setTimeout","init","ready","state","beforeUpdating","snapshot","onUpdate","destroy","setState","children","$default","Component","createMuiTheme","palette","primary","main","status","danger","Theme","ThemeProvider","CssBaseline","Layout","layoutSettings","display","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","menuButton","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","contentShift","sidebar","maxWidth","background","paper","sidebarNestedItem","Header","sidebarIsOpened","clsx","aria-label","onClick","style","height","pointerEvents","console","log","icon","DashboardRounded","VerifiedUser","items","SupervisedUserCircle","SidebarListItem","nestedItemClass","ListItem","Link","to","button","ListItemIcon","React","createElement","ListItemText","SidebarListItemGroup","useState","open","setOpen","itemsList","item","Collapse","in","timeout","unmountOnExit","List","disablePadding","Sidebar","onClose","useTheme","Drawer","anchor","Divider","DashboardLayout","Users","isLoading","table","usersService","list","paginationInfo","pagination","displayedContent","LinearProgress","renderTable","Form","isValidForm","e","preventDefault","stopPropagation","events","trigger","onSubmit","target","noValidate","submit","bind","login","form","FormInput","validationError","messages","required","email","inputReference","createRef","on","validate","input","current","inputValidation","empty","type","ref","name","placeholder","onInput","propTypes","PropTypes","bool","string","isRequired","defaultProps","Login","a","errors","response","description","getElementById","object","callback","displayErrors","router","localization","extend","edit","addItem","editItem","users","isLocalhost","Boolean","window","hostname","register","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","then","contentType","indexOf","serviceWorker","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","error","ReactDOM","render","react"],"mappings":"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","file":"static/js/main.29acf230.chunk.js","sourcesContent":["import { Obj } from 'reinforcements';\r\n\r\nlet configurationsList = {};\r\n\r\nconst config = {\r\n    /**\r\n     * Set the given key/value in our configurations list\r\n     * \r\n     * @param   {string} key\r\n     * @param   {any} value\r\n     * @returns void\r\n     */\r\n    set(key, value) {\r\n        // case one one argument only is passed and is object\r\n        if (arguments.length === 1) {\r\n            let data = key;\r\n            configurationsList = Object.assign(configurationsList, data);\r\n        } else {\r\n            configurationsList[key] = value;\r\n        }\r\n    },\r\n    /**\r\n     * Get the value for the given key, otherwise return the given default value\r\n     * P.S data will be grabbed using dot notation\r\n     * i.e name.first\r\n     * @param   {string} key\r\n     * @param   {any} defaultValue\r\n     * @returns any\r\n     */\r\n    get(key, defaultValue = null) {\r\n        return Obj.get(configurationsList, key, defaultValue);\r\n    },\r\n};\r\n\r\nexport default config;","import config from 'reactor/config';\n\nconfig.set({\n    // Services Configurations\n    // A.K.A Endpoints\n    endpoint: {\n        baseUrl: 'https://apps.mentoor.io/shera2/api/admin/',\n        apiKey: 'SP6YHG56IKLO90MNF4TGAQW23FVBG765',\n    },\n    locales: {\n        en: 'ltr',\n        ar: 'rtl',\n    }\n});","import React from 'react';\r\nimport Is from '@flk/supportive-is';\r\n\r\nexport default function Middleware(props) {\r\n    let { route, history, match } = props;\r\n\r\n    let { params } = match;\r\n\r\n    let middlewareList = route.middleware;\r\n\r\n    if (middlewareList) {\r\n        if (!Is.array(middlewareList)) {\r\n            middlewareList = [middlewareList];\r\n        }\r\n\r\n        for (let middleware of middlewareList) {\r\n            let output = middleware(route, history, params);\r\n\r\n            if (output) {\r\n                return output;\r\n            }\r\n        }\r\n    }\r\n\r\n    return <route.component params={params} history={history} />;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    Route,\r\n    Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\n\r\n// use custom history to manage router navigation from our side\r\nimport { createBrowserHistory } from 'history';\r\nimport Middleware from './middleware';\r\nimport config from 'reactor/config';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nlet localeCodes = config.get('locales');\r\n\r\n// /en/users\r\n// /users\r\n// first remove the first slash from the url\r\n// then split the pathname by the /\r\n// then get the first segment of the created array \r\nlet [firstSegmentOfLocation] = history.location.pathname.replace(/^\\//, '').split('/');\r\n\r\nif (localeCodes[firstSegmentOfLocation]) {\r\n    document.documentElement.dir = localeCodes[firstSegmentOfLocation];\r\n    document.documentElement.lang = firstSegmentOfLocation;\r\n}\r\n\r\n/**\r\n * Set all routes that may be requested in our application\r\n * \r\n * @const  {Array}  \r\n */\r\nconst routesList = [];\r\n\r\n/**\r\n * Add new route to the routes list\r\n *\r\n * @param {string} path\r\n * @param {React.Component} component\r\n * @param {Function|Array|null} middleware\r\n */\r\nfunction addRouter(path, component, middleware = null) {\r\n    routesList.push({\r\n        path,\r\n        component,\r\n        middleware,\r\n    });\r\n}\r\n\r\n/**\r\n * Return all application routes\r\n * \r\n * @returns {Array}\r\n */\r\nfunction Routes() {\r\n    // each route contains:\r\n    // path: path to page\r\n    // middleware: middleware to be applied before accessing the component page \r\n    // component: component class that will render the page\r\n    const routes = routesList.map((route, index) => {\r\n        return (\r\n            // added optional localization\r\n            // /users\r\n            // /en/users\r\n            // /ar/users\r\n            <Route path={`/:localeCode(${Object.keys(localeCodes).join('|')})?${route.path}`} exact={true} key={index}>\r\n                {(routeData) => {                    \r\n                    return <Middleware match={routeData.match} location={routeData.location} route={route} history={history} />;\r\n                }}\r\n            </Route>\r\n        );\r\n    });\r\n    return (\r\n        <Router history={history}>\r\n            <Switch>\r\n                {routes}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\n/**\r\n * navigate to the given path\r\n * \r\n * @param  {string} path \r\n */\r\nexport function navigateTo(path) {\r\n    history.push(path);\r\n}\r\n\r\n/**\r\n * Navigate to current location and switch language\r\n * \r\n * @param  {string} localeCode\r\n */\r\nexport function switchLang(localeCode) {\r\n\r\n}\r\n\r\n/**\r\n * Scan the entire routes list\r\n * \r\n * @returns  {void}\r\n */\r\nexport function scan() {\r\n    ReactDOM.render(<Routes />, document.getElementById('root'));\r\n}\r\n\r\nexport default {\r\n    add: addRouter\r\n};","/**\r\n * Set page title\r\n * \r\n * @param {string} title \r\n */\r\nexport function title(title) {\r\n    document.title = title;\r\n}\r\n\r\n/**\r\n * Set page description\r\n * \r\n * @param {string} title \r\n */\r\nexport function description(description) {\r\n    let metaDescriptionTag = document.getElementById('meta-description')\r\n    metaDescriptionTag.content = description;\r\n}\r\n","const direction = document.documentElement.dir || 'ltr';\r\nconst left = direction === 'ltr' ? 'left' : 'right';\r\nconst right = direction === 'ltr' ? 'right' : 'left';\r\n\r\nconst Globals = {\r\n    left: left,\r\n    right: right,\r\n    direction: direction,\r\n    marginLeft: `margin-${left}`,\r\n    marginRight: `margin-${right}`,\r\n    paddingLeft: `padding-${left}`,\r\n    paddingRight: `padding-${right}`,\r\n    localeCode: document.documentElement.lang,\r\n};\r\n\r\nexport default Globals;","import Globals from './globals';\r\nimport { Obj } from 'reinforcements';\r\nimport {vsprintf} from 'sprintf-js';\r\n\r\nclass Localization {\r\n    /**\r\n     * Add all keywords\r\n     */\r\n    keywords = {};\r\n\r\n    /**\r\n     * Default locale Code\r\n     */\r\n    localeCode = Globals.localeCode;\r\n\r\n    /**\r\n     * Add keywords \r\n     * \r\n     * @param  {object} keywords\r\n     * @returns {void}\r\n     */\r\n    extend(localeCode, keywords) {        \r\n        this.keywords[localeCode] = Obj.merge(this.keywords[localeCode], keywords);\r\n    }\r\n\r\n    /**\r\n     * Translate the given keyword in current locale code\r\n     *  \r\n     * @param   {string} keyword\r\n     * @returns {any} \r\n     */\r\n    translate(keyword, ...args) {        \r\n        return this.translateFrom(this.localeCode, keyword, ...args);\r\n    }\r\n\r\n    /**\r\n     * Translate the given keyword for the given locale code\r\n     * \r\n     * Please note this method accepts dot notation syntax\r\n     *  \r\n     * @param   {string} key\r\n     * @returns {any} \r\n     */\r\n    translateFrom(localeCode, keyword, ...args) {\r\n        let translation = Obj.get(this.keywords, `${localeCode}.${keyword}`);\r\n\r\n        return vsprintf(translation, args);\r\n    } \r\n}\r\n\r\nconst localizationObject = new Localization();\r\n\r\nexport function trans() {\r\n    return localizationObject.translate(...arguments);\r\n}\r\n\r\nexport default localizationObject;","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/AddCircle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/DeleteSweep';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport { trans } from 'reactor/localization';\r\n\r\nconst useStyles = makeStyles({\r\n    addButton: {\r\n        fill: lightBlue[800],\r\n    },\r\n    tooltip: {\r\n        backgroundColor: '#000',\r\n    }\r\n});\r\n\r\nexport function TableAddButton(props) {\r\n    const classes = useStyles(); \r\n    return (    \r\n        <Tooltip classes={{tooltip: classes.tooltip}} placement=\"top\" title={trans('add')}>\r\n        <IconButton>\r\n            <AddIcon fontSize=\"large\" color=\"primary\" />\r\n        </IconButton>\r\n        </Tooltip>\r\n    )\r\n}\r\nexport function TableEditButton(props) {\r\n    const classes = useStyles(); \r\n    return (\r\n        <Tooltip classes={{tooltip: classes.tooltip}} placement=\"top\" title={trans('edit')}>\r\n        <IconButton>\r\n            <EditIcon />\r\n        </IconButton>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport function TableDeleteButton(props) {\r\n    const classes = useStyles(); \r\n    return (\r\n        <Tooltip classes={{tooltip: classes.tooltip}} placement=\"top\" title={trans('remove')}>\r\n        <IconButton>\r\n            <DeleteIcon />\r\n        </IconButton>\r\n        </Tooltip>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/ListOutlined';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport { TableAddButton } from './table-actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        color: 'inherit',\r\n        backgroundColor: grey[100],\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function TableToolBar(props) {\r\n    const classes = useStyles();\r\n\r\n    let { text } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar className={classes.appBar} position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {text}\r\n                    </Typography>\r\n                    <TableAddButton />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Obj } from 'reinforcements';\r\nimport Table from '@material-ui/core/Table';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableToolBar from './table-toolbar';\r\nimport { trans } from 'reactor/localization';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\n\r\nexport default function SimpleTable(props) {\r\n    let { options, records } = props;\r\n\r\n    let tableHeading = options.columns.map(column => {\r\n        return <TableCell key={column.heading}>{column.heading}</TableCell>;\r\n    });\r\n\r\n    let tableRows = records.map((record, recordIndex) => {\r\n        return <TableRow key={record.id}>\r\n            {options.columns.map(column => {\r\n                if (column.buttons) {\r\n                    return <TableCell key={column.heading}>\r\n                        {column.buttons.map((ActionButton, index) => {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <ActionButton />\r\n                                </React.Fragment>\r\n                            )\r\n                        })}\r\n                    </TableCell>\r\n                }\r\n                return <TableCell key={column.heading}>\r\n                    {Obj.get(record, column.key)}\r\n                </TableCell>\r\n            })}\r\n\r\n        </TableRow>;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <TableToolBar text={trans(options.heading)} />\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {tableHeading}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {tableRows}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}","export default {\r\n    /**\r\n     * Set the storage engine\r\n     */\r\n    storage: localStorage,\r\n\r\n    /**\r\n     * Set data into storage engine\r\n     * @param {string} key \r\n     * @param {value} value \r\n     */\r\n    set(key, value) {\r\n        this.storage.setItem(key, JSON.stringify({\r\n            data: value,\r\n        }));\r\n    },\r\n\r\n    /**\r\n     * Get vale from storage engine\r\n     * \r\n     * @param   {string} key \r\n     * @returns {any}\r\n     */\r\n    get(key) {\r\n        let value = this.storage.getItem(key);\r\n\r\n        return value ? JSON.parse(value).data : null;\r\n    },\r\n\r\n    /**\r\n     * Remove key from storage\r\n     * \r\n     * @param  {string} key  \r\n     */\r\n    remove(key) {\r\n        this.storage.removeItem(key);\r\n    }\r\n};","import cache from 'reactor/cache';\r\n\r\nclass User {\r\n    constructor() {\r\n        this.userData = cache.get('user');\r\n    }\r\n\r\n    /**\r\n     * Check if user is logged in\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    isLoggedIn() {\r\n        return this.userData !== null;\r\n    }\r\n\r\n    /**\r\n     * Log the user in \r\n     * It will store the data in the storage engine i.e Local Storage\r\n     * But will not make the ajax request\r\n     * \r\n     * @param  {object} userData \r\n     * @returns {void}\r\n     */\r\n    login(userData) {\r\n        this.userData = userData;\r\n        cache.set('user', userData);\r\n    }\r\n\r\n    /**\r\n     * Get user access token\r\n     * \r\n     * @returns {string}\r\n     */\r\n    getAccessToken() {\r\n        return this.userData.accessToken;\r\n    }\r\n}\r\n\r\nexport default new User();","import user from 'user';\r\nimport axios from 'axios';\r\nimport config from './config';\r\nimport Is from '@flk/supportive-is';\r\n\r\nlet http = axios.create({\r\n    baseURL: config.get('endpoint.baseUrl'),\r\n    transformRequest: [function (data) {\r\n        if (Is.formElement(data)) {\r\n            return new FormData(data);\r\n        }\r\n\r\n        return data;\r\n    }],\r\n});\r\n\r\n\r\nhttp.interceptors.request.use(requestConfig => {\r\n    let auth = user.isLoggedIn() ? `Bearer ${user.getAccessToken()}` : `key ${config.get('endpoint.apiKey')}`;\r\n\r\n    requestConfig.headers.Authorization = auth;\r\n    \r\n    return requestConfig;\r\n});\r\n\r\nexport default http;\r\n\r\n// Authorization Header\r\n\r\n// If logged in\r\n\r\n// Authorization: Bearer {accessToken}\r\n\r\n// Otherwise\r\n\r\n// Authorization: Key {apiKey}","import RestfulEndpoint from \"reactor/restful-endpoint\";\r\n\r\nclass UsersService extends RestfulEndpoint {\r\n    route = '/users';\r\n}\r\n\r\nexport default new UsersService();","import endpoint from './endpoint';\r\n\r\nexport default class RestfulEndpoint {\r\n    /**\r\n     * Set the main module route\r\n     * i.e /users\r\n     * \r\n     * @var  {string}\r\n     */\r\n    route = '';\r\n\r\n    /**\r\n     * Fetch records from endpoint api\r\n     * \r\n     * @param   {object} params \r\n     * @returns {Promise}\r\n     */\r\n    list(params) {        \r\n        return endpoint.get(this.route, {\r\n            params,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch one record from endpoint api\r\n     * \r\n     * @param   {number} id \r\n     * @param   {object} params \r\n     * @returns {Promise}\r\n     */\r\n    get(id, params) {\r\n        return endpoint.get(this.route + '/' + id, {\r\n            params\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create new record\r\n     * \r\n     * @param   {object|FormData} data \r\n     * @returns {Promise}\r\n     */\r\n    post(data) {\r\n        return endpoint.post(this.route, {\r\n            data\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update existing record\r\n     * \r\n     * @param   {number} id \r\n     * @param   {object|FormData} data \r\n     * @returns {Promise}\r\n     */\r\n    put(id, data) {\r\n        return endpoint.put(this.route + '/' + id, {\r\n            data\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Delete existing record\r\n     * \r\n     * @param   {number} id \r\n     * @returns {Promise}\r\n     */\r\n    delete(id) {\r\n        return endpoint.delete(this.route + '/' + id);\r\n    }\r\n}","import { Component } from \"react\";\r\nimport { Obj } from 'reinforcements';\r\n\r\nclass ReactorComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        setTimeout(() => {\r\n            this.init();\r\n        }, 0);\r\n    }\r\n\r\n    /**\r\n     * Triggered just before rendering the component into the DOM for the first time\r\n     * This method should be used instead of constructor for doing certain actions/requests\r\n     * \r\n     * @memberof ReactorComponent\r\n     */\r\n    init() { }\r\n\r\n    /**\r\n     * Triggered after the component is rendered\r\n     * \r\n     * @alias componentDidMount\r\n     * @memberof ReactorComponent\r\n     */\r\n    ready() { }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    componentDidMount() {\r\n        this.ready();\r\n    }\r\n\r\n    /**\r\n     * Triggered before the component is rendered again\r\n     * \r\n     * @alias getSnapshotBeforeUpdate\r\n     * @memberof ReactorComponent\r\n     */\r\n    beforeUpdating(props, state) { }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    getSnapshotBeforeUpdate(props, state) {\r\n        let data = this.beforeUpdating(props, state);\r\n\r\n        // if this method returns the following object\r\n        return data || null;\r\n    }\r\n\r\n    /**\r\n     * Triggered after the component is rendered again\r\n     * \r\n     * @param {object} props\r\n     * @param {object} state\r\n     * @param {any} snapshot\r\n     * @alias componentDidUpdate\r\n     * @memberof ReactorComponent\r\n     */\r\n    onUpdate(props, state, snapshot) { }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    componentDidUpdate(props, state, snapshot) {\r\n        this.onUpdate(props, state, snapshot); // good practice\r\n    }\r\n\r\n    /**\r\n     * Triggered before the component is destroyed\r\n     * \r\n     * @alias componentWillUnmount\r\n     * @memberof ReactorComponent\r\n     */\r\n    destroy() { }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    componentWillUnmount() {\r\n        this.destroy();\r\n    }\r\n\r\n    /**\r\n     * Set the given value to its corresponding key\r\n     * The key here is a dot notation basis \r\n     *\r\n     * @param {string} key\r\n     * @param {*} value\r\n     * @memberof ReactorComponent\r\n     */\r\n    set(key, value) {\r\n        this.setState(\r\n            Obj.set(this.state, key, value),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get component children\r\n     * \r\n     * @param   {any} args \r\n     * @returns {array|null}\r\n     */\r\n    children() {\r\n        return this.props.children;\r\n    }\r\n\r\n    /**\r\n     * Get the value of the given `dot.notation` key from state\r\n     * \r\n     * @param   {string} key\r\n     * @param   {*} $default\r\n     * @returns {*}  \r\n     */\r\n    get(key, $default = null) {\r\n        return Obj.get(this.state, key, $default);\r\n    }\r\n}\r\n\r\nexport default ReactorComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Globals from 'reactor/globals';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    direction: Globals.direction,\r\n    palette: {\r\n        primary: {\r\n            main: lightBlue[800],\r\n        },\r\n    },\r\n    status: {\r\n        danger: 'orange',\r\n    },\r\n});\r\n\r\nexport default function Theme(props) {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            {props.children}\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nTheme.propTypes = {\r\n    children: PropTypes.any.isRequired,\r\n};","import React from 'react';\r\nimport Theme from './theme';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Layout(props) {\r\n    return <Theme {...props} />;\r\n}\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.node,\r\n        PropTypes.arrayOf(PropTypes.node),\r\n    ]).isRequired,\r\n};","import { makeStyles } from \"@material-ui/core\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport Globals from \"reactor/globals\";\r\n\r\nconst drawerWidth = 240;\r\nconst layoutSettings = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        backgroundColor: lightBlue[800],\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        [Globals.marginLeft]: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        [Globals.marginLeft]: 0,\r\n    },\r\n    sidebar: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    sidebarNestedItem: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\n\r\nexport default layoutSettings;","import clsx from 'clsx';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport layoutSettings from '../layout-settings';\r\n\r\nexport default function Header(props) {\r\n    let classes = layoutSettings(),\r\n        sidebarIsOpened = props.sidebarIsOpened;\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: sidebarIsOpened,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={props.onClick}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, sidebarIsOpened && classes.hide)}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\">\r\n                    Persistent drawer\r\n                </Typography>\r\n                <Typography style={{\r\n                    // padding: theme.spacing(0, 2),\r\n                    height: '100%',\r\n                    position: 'absolute',\r\n                    pointerEvents: 'none',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                }} variant=\"h6\">\r\n                    Persistent drawer\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n};\r\n\r\nif (process.env.NODE_ENV == 'development') {\r\n    console.log('Welcome Hasan');\r\n} else {\r\n    console.log('Welcome HasanProd');\r\n}\r\n\r\n\r\nHeader.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    classes: PropTypes.object,\r\n    sidebarIsOpened: PropTypes.bool,\r\n}","import { DashboardRounded, VerifiedUser, SupervisedUserCircle } from '@material-ui/icons';\r\n\r\nexport default [\r\n    {\r\n        text: 'Dashboard',\r\n        route: '/',\r\n        icon: DashboardRounded\r\n    },\r\n    {\r\n        text: 'Users',\r\n        icon: VerifiedUser,\r\n        items: [\r\n            {\r\n                text: 'Users List',\r\n                route: '/users',\r\n                icon: SupervisedUserCircle\r\n            }\r\n        ]\r\n    }\r\n];","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nexport default function SidebarListItem(props) {\r\n    let { text, route, icon, nestedItemClass } = props;\r\n\r\n    return (\r\n        <ListItem\r\n            className={nestedItemClass}\r\n            component={Link}\r\n            to={route}\r\n            button\r\n        >\r\n            <ListItemIcon>\r\n                {React.createElement(icon)}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nSidebarListItem.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    route: PropTypes.string.isRequired,\r\n    // icon: PropTypes.element.isRequired,\r\n    nestedItemClass: PropTypes.string\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SidebarListItem from './list-item';\r\nimport List from '@material-ui/core/List';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nexport default function SidebarListItemGroup(props) {\r\n    const { text, icon, items, nestedItemClass } = props;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    let itemsList = items.map((item, index) => {\r\n        return (\r\n            <SidebarListItem\r\n                nestedItemClass={nestedItemClass}\r\n                key={index}\r\n                route={item.route}\r\n                text={item.text}\r\n                icon={item.icon}\r\n            />\r\n        )\r\n    });\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemIcon>\r\n                    { React.createElement(icon) }\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    {itemsList}\r\n                </List>\r\n            </Collapse>\r\n        </>\r\n    );\r\n}\r\n\r\nSidebarListItemGroup.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    // icon: PropTypes.node.isRequired, \r\n    nestedItemClass: PropTypes.string,\r\n    items: PropTypes.array.isRequired,\r\n};","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport items from './sidebar-items-list';\r\nimport SidebarListItem from './list-item';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport SidebarListItemGroup from './list-item-group';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport layoutSettings from '../layout-settings';\r\n\r\nexport default function Sidebar(props) {\r\n    let { onClose, open } = props;\r\n    const theme = useTheme();\r\n    const classes = layoutSettings();\r\n\r\n    let itemsList = items.map((item, index) => {\r\n        // in this case, we'll return itemGroup\r\n        if (item.items) {\r\n            return <SidebarListItemGroup\r\n                key={index}\r\n                nestedItemClass={classes.sidebarNestedItem}\r\n                text={item.text}\r\n                icon={item.icon}\r\n                items={item.items} \r\n            />;\r\n        }\r\n\r\n        // otherwise, we'll just return a list item\r\n        return <SidebarListItem\r\n            key={index}\r\n            text={item.text}\r\n            icon={item.icon}\r\n            route={item.route} />;\r\n    });\r\n\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={onClose}>\r\n                    {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n\r\n            <List\r\n                component=\"nav\"\r\n                className={classes.sidebar}\r\n            >\r\n                { itemsList }\r\n            </List>\r\n        </Drawer>\r\n    );\r\n}","import clsx from 'clsx';\r\nimport React from 'react';\r\nimport Layout from \"./layout\";\r\nimport PropTypes from 'prop-types';\r\nimport Header from \"../header/header\";\r\nimport Sidebar from \"../sidebar/sidebar\";\r\nimport layoutSettings from \"../layout-settings\";\r\n\r\nexport default function DashboardLayout(props) {\r\n    const classes = layoutSettings();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <div className={classes.root}>\r\n                <Header\r\n                    sidebarIsOpened={open}\r\n                    onClick={handleDrawerOpen}\r\n                />\r\n                <Sidebar\r\n                    open={open}\r\n                    onClose={handleDrawerClose}\r\n                />\r\n                <main\r\n                    className={clsx(classes.content, {\r\n                        [classes.contentShift]: open,\r\n                    })}\r\n                >\r\n                    <div className={classes.drawerHeader} />\r\n                    {props.children}\r\n                </main>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nDashboardLayout.propTypes = {\r\n    children: PropTypes.any.isRequired,\r\n};","import React from 'react';\r\nimport { title } from 'reactor/metadata';\r\nimport Table from 'shared/components/table/table';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport usersService from 'modules/users/services/users-service';\r\nimport ReactorComponent from 'reactor/component/reactor.component';\r\nimport DashboardLayout from 'shared/components/layout/dashboard-layout';\r\nimport { TableEditButton, TableDeleteButton } from 'shared/components/table/table-actions';\r\n\r\nexport default class Users extends ReactorComponent {\r\n    state = {\r\n        isLoading: true,\r\n    };\r\n\r\n    table = {\r\n        heading: 'users',\r\n        columns: [\r\n            {\r\n                heading: '#',\r\n                key: 'id',\r\n            },\r\n            {\r\n                heading: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                heading: 'group',\r\n                key: 'group.name',\r\n            },\r\n            {\r\n                heading: 'email',\r\n                key: 'email',\r\n            },\r\n            {\r\n                heading: 'actions',\r\n                buttons: [TableEditButton, TableDeleteButton]\r\n            }\r\n        ],\r\n    };\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    async init() {\r\n        title(this.table.heading);\r\n\r\n        let { data } = await usersService.list(); // /users\r\n\r\n        let { records, paginationInfo } = data;\r\n\r\n        this.paginationInfo = paginationInfo;\r\n\r\n        this.records = records;\r\n\r\n        this.set('isLoading', false);\r\n    }\r\n\r\n    renderTable() {\r\n        return <Table\r\n            options={this.table}\r\n            records={this.records}\r\n            pagination={this.paginationInfo} />\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    render() {\r\n        let displayedContent = this.get('isLoading') ? <LinearProgress /> : this.renderTable();\r\n        return (\r\n            <DashboardLayout>\r\n                {displayedContent}\r\n            </DashboardLayout>\r\n        );\r\n    }\r\n}   ","import React  from 'react';\r\nimport events from '@flk/events';\r\nimport ReactorComponent from 'reactor/component/reactor.component';\r\n\r\nexport default class Form extends ReactorComponent {\r\n    isValidForm = true;\r\n    /**\r\n     * Submit form\r\n     */\r\n    submit(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        this.isValidForm = true; // make sure its is reset\r\n\r\n        // validate all inputs\r\n        events.trigger('form.validation', this);\r\n\r\n        // check if the form is valid\r\n        // if not, then do not submit\r\n        if (this.isValidForm === false) return;\r\n\r\n        if (this.props.onSubmit) {\r\n            let formElement = e.target;\r\n            this.props.onSubmit(e, formElement);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    render() {\r\n        // noValidate disables the browser default validation\r\n        return (\r\n            <form noValidate={true} onSubmit={this.submit.bind(this)}>\r\n                {this.props.children}\r\n            </form>\r\n        );\r\n    }\r\n}","import endpoint from 'reactor/endpoint';\r\n\r\nexport function login(form) {\r\n    return endpoint.post('/login', form);\r\n}","import React from 'react';\r\nimport events from '@flk/events';\r\nimport Is from '@flk/supportive-is';\r\nimport PropTypes from 'prop-types';\r\nimport ReactorComponent from 'reactor/component/reactor.component';\r\n\r\nexport default class FormInput extends ReactorComponent {\r\n    state = {\r\n        validationError: null\r\n    };\r\n\r\n    messages = {\r\n        required: 'This field is required',\r\n        email: 'Invalid Email Address',\r\n    };\r\n    \r\n    inputReference = React.createRef(); // createRef\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    init() {\r\n        events.on('form.validation', form => {\r\n            // validate the input\r\n            this.validate({\r\n                target: this.input,\r\n            });\r\n\r\n            if (this.get('validationError')) {\r\n                form.isValidForm = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    ready() {\r\n        this.input = this.inputReference.current;        \r\n    }\r\n\r\n    /**\r\n     * Validate the input\r\n     */\r\n    validate(e) {\r\n        let input = e.target,\r\n            value = input.value;\r\n\r\n        // reset validation input error\r\n        let inputValidation = null;\r\n\r\n        // validate required input\r\n        // check if the input is not empty\r\n        if (this.props.required === true && Is.empty(value)) {\r\n            // he didn't access this body\r\n            inputValidation = this.messages.required;\r\n        }\r\n\r\n        // check if the input value a valid email address\r\n        // validate the email when?\r\n        // when the validation.email is null \r\n        if (this.props.type === 'email' && inputValidation === null && !Is.empty(value) && !Is.email(value)) {\r\n            inputValidation = this.messages.email;\r\n        }\r\n\r\n        this.set('validationError', inputValidation);\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <input\r\n                    ref={this.inputReference}\r\n                    type={this.props.type}\r\n                    name={this.props.name}\r\n                    className={this.props.className}\r\n                    placeholder={this.props.placeholder}\r\n                    onInput={this.validate.bind(this)}\r\n                />\r\n                {\r\n                    this.get('validationError') !== null &&\r\n                    <label className=\"error\">{this.get('validationError')}</label>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFormInput.propTypes = {\r\n    required: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n};  \r\n\r\nFormInput.defaultProps = {\r\n    type: 'text',\r\n};","import './login.scss';\r\nimport user from 'user';\r\nimport React from 'react';\r\nimport { navigateTo } from 'reactor/router';\r\nimport { mapObject } from 'reactor/helpers';\r\nimport Form from 'reactor/component/form/form';\r\nimport { login } from 'modules/users/services/auth';\r\nimport Layout from 'shared/components/layout/layout';\r\nimport { title, description } from 'reactor/metadata';\r\nimport FormInput from 'reactor/component/form/form-input';\r\nimport ReactorComponent from 'reactor/component/reactor.component';\r\n\r\nexport default class Login extends ReactorComponent {\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    state = {};\r\n\r\n    /**\r\n     * {@inheritdoc} \r\n     */\r\n    init() {\r\n        title('My Login Page');\r\n        description('Some login description');\r\n    }\r\n\r\n    /**\r\n     * Submit login form\r\n     */\r\n    login = async (e) => {\r\n        this.set('errors', null); // make sure to clear previous errors\r\n\r\n        try {\r\n            let { data } = await login(e.target);\r\n\r\n            user.login(data.user);\r\n\r\n            navigateTo('/users');\r\n\r\n        } catch (error) {\r\n            let errors = error.response.data.errors;\r\n\r\n            this.set('errors', errors);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Display errors coming from api \r\n     */\r\n    displayErrors() {\r\n        this.errors = this.get('errors');\r\n        return mapObject(this.errors, (key, value) => {\r\n            return (\r\n                <div key={key}>{value}</div>\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * {@inheritdoc}\r\n     */\r\n    render() {\r\n        return (\r\n            <Layout>\r\n\r\n                <div id=\"login-page\">\r\n                    <h1>Login Page</h1>\r\n\r\n                    <Form onSubmit={this.login}>\r\n                        {this.get('errors') &&\r\n                            <div className=\"error\">\r\n                                {this.displayErrors()}\r\n                            </div>\r\n                        }\r\n\r\n                        <FormInput\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            required={true}\r\n                            placeholder=\"Email Address\"\r\n                        />\r\n\r\n                        <FormInput\r\n                            type=\"password\"\r\n                            required={true}\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Your Password\"\r\n                        />\r\n                        <div id=\"button-wrapper\">\r\n                            <button>Login</button>\r\n                        </div>\r\n                    </Form>\r\n                </div>  \r\n            </Layout>\r\n        );\r\n    }\r\n}","/**\r\n * Map the given object into an array\r\n * \r\n * @param   {object} object \r\n * @param   {function} callback\r\n * @returns {Array} \r\n */\r\nexport function mapObject(object, callback) {\r\n    return Object.keys(object).map(key => {\r\n        return callback(key, object[key]);\r\n    });\r\n}","import router from 'reactor/router';\r\nimport Users from './components/Users';\r\nimport Login from './components/Login';\r\nimport Guardian from './middleware/guardian';\r\nimport ReverseGuardian from './middleware/reverse-guardian';\r\n\r\nrouter.add('/users', Users, Guardian);\r\nrouter.add('/login', Login, ReverseGuardian);","import React from 'react';\r\nimport user from \"reactor/user\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function isLoggedIn(route, history) {\r\n    if (! user.isLoggedIn()) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n}\r\n","import React from 'react';\r\nimport user from \"reactor/user\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function alreadyLoggedIn(route, history) {\r\n    if (user.isLoggedIn()) {\r\n        return <Redirect to=\"/users\" />\r\n    }\r\n}","import localization from 'reactor/localization';\r\n\r\nlocalization.extend('en', {\r\n    add: 'Add',\r\n    edit: 'Edit',\r\n    remove: 'Remove',    \r\n    addItem: 'Add new %s',\r\n    editItem: 'Edit %s',\r\n    removeItem: 'Remove %s',\r\n});","import localization from 'reactor/localization';\r\n\r\nlocalization.extend('en', {\r\n    users: 'Users List',    \r\n});","import localization from 'reactor/localization';\r\n\r\nlocalization.extend('ar', {\r\n    users: 'قائمة الأعضاء',    \r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'shared/config';\nimport 'modules/users/routes';\nimport 'shared/locales/en';\nimport 'modules/users/locales/en';\nimport 'modules/users/locales/ar';\nimport Reactor from 'reactor/reactor';\n\nconst reactor = new Reactor();    \n\n// start the application\nreactor.react();","import { scan } from 'reactor/router';\nimport * as serviceWorker from './serviceWorker';\n\nexport default class Reactor {\n    /**\n     * Start the application\n     */\n    react() {\n        // start scanning all routes\n        scan();\n    }\n\n    /**\n     * Allow the application to work offline\n     */\n    workOffline() {\n        // If you want your app to work offline and load faster, you can change\n        // unregister() to register() below. Note this comes with some pitfalls.\n        // Learn more about service workers: https://bit.ly/CRA-PWA\n        serviceWorker.register();\n\n        return this;\n    }\n}"],"sourceRoot":""}